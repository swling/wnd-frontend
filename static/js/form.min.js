function _wnd_render_form(e,t,i=""){function s(e){function t(){return`\n<form v-bind="form.attrs">\n<div v-if="form.before_html" v-html="form.before_html"></div>\n<div class="field" v-show="form.title.title"><h3 v-bind="form.title.attrs" v-html="form.title.title"></h3></div>\n<div v-bind="form.message.attrs" class="message" v-show="form.message.message"><div class="message-body" v-html="form.message.message"></div></div>\n${i(e)}\n${a(e)}\n<div class="form-script"></div>\n<div v-if="form.after_html" v-html="form.after_html"></div>\n</form>`}function i(e){let t="";for(let s=0;s<e.fields.length;s++){let a=e.fields[s],d=`form.fields[${s}]`;if(i()&&(t+=`\n<div class="field is-horizontal">\n<div class="field-label ${e.size}">\n<label v-if="${d}.label" class="label is-hidden-mobile"><span v-if="${d}.required" class="required">*</span>{{${d}.label}}</label>\n</div>\n<div class="field-body">`),"html"==a.type)t+=a.value;else if(l.includes(a.type))t+=n.build_text(d,s);else if("radio"==a.type||"checkbox"==a.type)t+=n.build_radio(d,s);else if("hidden"==a.type)t+='<input v-bind="parse_input_attr('+d+')" v-model="'+d+'.value" />';else{let e="build_"+a.type;t+=n[e](d,s)}function i(){return e.attrs["is-horizontal"]&&!["html","hidden","editor"].includes(a.type)&&"_post_post_title"!=a.name}i()&&(t+="</div></div>")}return t}function a(e){return`\n<div v-if="form.submit.text" class="field is-grouped is-grouped-centered">\n<button type="button" v-bind="form.submit.attrs" @click="submit($event)" class="${e.size}" v-text="form.submit.text"></button>\n</div>`}let n=s;return build_label=((e,t)=>`<label v-if="!form.attrs['is-horizontal'] && ${e}.label" class="label" :class="form.size"><span v-if="${e}.required" class="required">*</span>{{${e}.label}}</label>`),n.build_text=((e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div v-if="${e}.addon_left" class="control" v-html="${e}.addon_left"></div>\n<div :class="get_control_class(${e})">\n<input v-bind="parse_input_attr(${e})" :value="html_decode(${e}.value)" @input="${e}.value=html_encode($event.target.value)" @change="change(${e}, $event)" @keypress.enter="submit"/>\n<span v-if="${e}.icon_left" class="icon is-left"  v-html="${e}.icon_left"></span>\n<span v-if="${e}.icon_right" class="icon is-right" v-html="${e}.icon_right"></span>\n</div>\n<div v-if="${e}.addon_right" class="control" v-html="${e}.addon_right"></div>\n<p v-if="!has_addon(${e})" v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`),n.build_radio=((e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div :class="get_control_class(${e})">\n<template v-for="(radio_value, radio_label) in ${e}.options">\n<label :class="${e}.type">\n<input v-bind="parse_input_attr(${e})" :value="radio_value" v-model="${e}.checked" @change="change(${e}, $event)" :disabled="should_be_disabled(${e}, radio_value)">\n{{radio_label}}</label>\n</template>\n</div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`),n.build_select=((e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div v-if="${e}.addon_left" class="control" v-html="${e}.addon_left"></div>\n<div :class="get_control_class(${e})">\n<div class="select" :class="${e}.class + ' ' + form.size">\n<select v-bind="parse_input_attr(${e})" v-model="${e}.selected" @change="change(${e}, $event)">\n<option disabled value="">- {{${e}.label}} -</option>\n<option v-for="(value, name) in ${e}.options" :value="value">{{name}}</option>\n</select>\n</div>\n<span v-if="${e}.icon_left" class="icon is-left"  v-html="${e}.icon_left"></span>\n<span v-if="${e}.icon_right" class="icon is-right" v-html="${e}.icon_right"></span>\n</div>\n<div v-if="${e}.addon_right" class="control" v-html="${e}.addon_right"></div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`),n.build_select_linked=((e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div v-if="${e}.addon_left" class="control" v-html="${e}.addon_left"></div>\n<div :class="get_control_class(${e})">\n<div class="select">\n<select class="select" style="display:inline-block" :class="${e}.class + ' ' + form.size" v-bind="parse_input_attr(${e})" v-for="(option, key) in ${e}.options" v-model="${e}.selected[key]" @change="selected($event, key, ${t})" :key="key">\n<option disabled value="">- {{${e}.label}} -</option>\n<option v-for="(v,k ) in option" :value="v" :key="v">{{k}}</option>\n</select>\n</div>\n<span v-if="${e}.icon_left" class="icon is-left"  v-html="${e}.icon_left"></span>\n<span v-if="${e}.icon_right" class="icon is-right" v-html="${e}.icon_right"></span>\n</div>\n<div v-if="${e}.addon_right" class="control" v-html="${e}.addon_right"></div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`),n.build_textarea=((e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<textarea :value="html_decode(${e}.value)" @input="${e}.value = html_encode($event.target.value)" v-bind="parse_input_attr(${e})" @change="change(${e}, $event)"></textarea>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`),n.build_file_upload=((e,t)=>`\n<div :id="get_field_id(${e},${t})" class="field" :class="${e}.class">\n<div v-if="${e}.complete" class="field">\n<progress class="progress is-primary" :value="${e}.complete" max="100"></progress>\n</div>\n<div class="columns is-mobile is-vcentered">\n\n<div class="column">\n<div class="file has-name is-fullwidth" :class="form.size">\n<label class="file-label">\n<input type="file" class="file file-input" :name="${e}.name" @change="upload($event,${e})">\n<span class="file-cta">\n<span class="file-icon"><i class="fa fa-upload"></i></span>\n</span>\n<span class="file-name" v-html="${e}.file_name"></span>\n</label>\n</div>\n</div>\n\n<div v-show="${e}.delete_button && ${e}.file_id" class="column is-narrow">\n<a class="delete" @click="delete_file(${e},${t})"></a>\n</div>\n\n</div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class" style="margin-top:-1rem;">{{${e}.help.text}}</p>\n</div>`),n.build_image_upload=((e,t)=>`\n<div :id="get_field_id(${e},${t})" class="field" :class="${e}.class">\n<div v-if="${e}.complete">\n<progress class="progress is-primary" :value="${e}.complete" max="100"></progress>\n</div>\n\n${build_label(e)}\n<a @click="click_target('#' + get_field_id(${e}, ${t}) + ' input[type=file]')">\n<img class="thumbnail" :src="${e}.thumbnail" :height="${e}.thumbnail_size.height" :width="${e}.thumbnail_size.width">\n</a>\n<a v-show="${e}.delete_button && ${e}.file_id" class="delete" @click="delete_file(${e}, ${t})"></a>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n<div class="file"><input type="file" class="file file-input" accept="image/*" :name="${e}.name" @change="upload($event,${e})"></div>\n</div>`),n.build_editor=((e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<textarea :id="form.attrs.id + '-${t}'" style="display:none;border:#f1e2c3 1px solid;" v-model="${e}.value" v-bind="parse_input_attr(${e})" @change="change(${e}, $event)"></textarea>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`),n.build_tag_input=((e,t)=>{let i=document.createElement("style");i.innerHTML="\n.tags-input{width:100%;border-bottom:1px solid #ccc}\n.tags-input input{border:none;width:100%;font-size:1rem;position:absolute;top:0;bottom:0;height:100%;}\n.tags-input input:focus{border:none;box-shadow:none;outline:0;}\n.tags-input .tag{margin:5px}\n.tags-input .autocomplete{position:relative;display:inline-block;min-height:3rem;}\n.tags-input .autocomplete-items{position:absolute;box-shadow:0 2px 10px #999;border-bottom:none;border-top:none;z-index:99;top:100%;left:0}\n.tags-input .autocomplete-items li{padding:10px;cursor:pointer;background-color:#fff;border-bottom:1px solid #eee}\n.tags-input .autocomplete-items li:hover{background-color:#eee}",document.head.appendChild(i);let s=`\n<template v-for="(tag, index) in ${e}.value">\n<span class="tag is-medium is-light is-danger">{{tag}}<span class="delete is-small" @click="delete_tag(tag, ${t})"></span></span>\n</template>`,l=`\n<template v-for="(tag, index) in ${e}.data.suggestions">\n<li @click="enter_tag_by_sg($event, ${t})">{{tag}}</li>\n</template>`;return`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div class="tags-input columns is-marginless">\n<div class="column is-marginless is-paddingless is-narrow">${s}</div>\n<div class="autocomplete column is-marginless">\n<input type="text" :readonly="${e}.value.length >= ${e}.data.max" @input="suggest_tags($event.target.value, ${t})" @keypress.enter="enter_tag($event, ${t})" @click="handle_tag_input_click($event, ${t})"/>\n<template v-for="(tag, index) in ${e}.value"><input type="hidden" v-bind="parse_input_attr(${e}, ['type'])" v-model="tag" /></template>\n<ul v-show="${e}.value.length < ${e}.data.max" class="autocomplete-items">${l}</ul>\n</div>\n</div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`}),t()}let l=["text","number","email","password","url","color","date","range","tel"],a=JSON.parse(JSON.stringify(t)),n=document.querySelector(e);i&&n.classList.add(i);let d={template:s(a),data:()=>({form:a,index:{editor:[],captcha:"",ids:[]},default_data:{}}),methods:{html_encode:function(e){let t=document.createElement("div");t.innerText=e;let i=t.innerHTML;return t=null,i},html_decode:function(e){var t=document.createElement("div");t.innerHTML=e;var i=t.innerText;return t=null,i},has_addon:function(e){return e.addon_left||e.addon_right},has_icon:function(e){return e.icon_left||e.icon_right},get_field_class:function(e){return this.has_addon(e)?"field has-addons":"field"},get_control_class:function(e){let t="control";return t+=this.has_addon(e)?" is-expanded":"",t+=e.icon_left?" has-icons-left":"",t+=e.icon_right?" has-icons-right":"",t},get_field_id:function(e,t){return e.id||this.form.attrs.id+"-"+t},get_value:function(e){let t=["checkbox","radio"].includes(e.type)?[]:"",i=e.checked||e.selected;return e.value?t=e.value:i&&("object"!=typeof i||i.length||Object.keys(i).length)&&(t=e.checked||e.selected),t="object"==typeof t?Object.values(t):t,t},parse_input_attr:function(e,t=[]){let i=JSON.parse(JSON.stringify(e));return Object.keys(i).forEach(e=>{i[e]&&""!=i[e]||delete i[e]}),t.forEach(e=>{delete i[e]}),i.class=(l.includes(e.type)?"input":e.type)+" "+(i.class||""),i.class+=" "+this.form.size,delete i.icon_left,delete i.icon_right,delete i.addon_left,delete i.addon_right,delete i.options,delete i.label,delete i.help,delete i.value,delete i.checked,delete i.selected,delete i.options,"file_upload"==i.type?i.type="file":"select"!=i.type&&"select_linked"!=i.type||delete i.type,delete i.data,delete i.linkage,i},build_editor:function(){function e(){i.index.editor.forEach(e=>{t(e)})}function t(e){let t=i.form.fields[e],s=i.form.attrs["data-post-id"]||0,l=`#${i.form.attrs.id}-${e}`;tinymce.init({branding:!1,selector:l,menubar:!1,language:"zh_CN",cache_suffix:cache_suffix,autosave_restore_when_empty:!0,autosave_prefix:"tinymce-autosave-"+s,autosave_ask_before_unload:!1,relative_urls:!1,remove_script_host:!1,pagebreak_separator:"<!--more-->",pagebreak_split_block:!0,plugins:"advlist autolink autoresize autosave code codesample fullscreen image link lists pagebreak wordcount wndimage wndinit",toolbar:"formatselect | alignleft aligncenter alignright bullist numlist | blockquote wndimage link codesample  pagebreak wndpaidcontent | removeformat code fullscreen",wnd_config:{rest_nonce:wnd.rest_nonce,upload_url:t.upload_url,post_parent:s,oss_direct_upload:i.form.attrs["data-oss-direct-upload"]},setup:function(s){texarea=document.querySelector(l),texarea.style.removeProperty("display"),s.on("change",function(){t.value=tinymce.get(`${i.form.attrs.id}-${e}`).getContent(),n.style.removeProperty("height")})},init_instance_callback:function(e){i.$nextTick(function(){funTransitionHeight(n,trs_time)})}})}let i=this;if("undefined"==typeof tinymce){let t=static_path+"editor/tinymce/tinymce.min.js"+cache_suffix;wnd_load_script(t,function(){e()})}else e()},click_target(e){document.querySelector(e).click()},should_be_disabled:function(e,t){if("checkbox"==e.type&&e.max>0){let i=e.checked;if(i.length>=e.max&&!i.includes(t))return!0}return!1},change:function(e,t){if(e.linkage){let s=t.target.value,l=e.linkage.query||!1,a=e.linkage.data&&e.linkage.data[s]||!1,n=e.linkage.params||{};function i(t,i){e.linkage.fields.forEach(e=>{let s=t.index.ids[e],l=t.form.fields[s];l=Object.assign(l,i)})}n[e.name]=s,a?i(this,a):l&&wnd_query(l,n,e=>{i(this,e.data)})}e.class=e.class.replace("is-danger",""),e.help.class=e.help.class.replace("is-danger",""),e.help.text=e.help.text.replace(" "+wnd.msg.required,""),this.$nextTick(function(){funTransitionHeight(n,trs_time)})},selected(e,t,i){let s=this.form.fields[i],l=s.data.query,a=Object.assign(s.data.params,{parent:e.target.value});this.change(s),wnd_query(l,a,e=>{let i=e.data;Object.keys(i).length?(s.options.splice(t+1,s.options.length,i),s.selected[t+1]=""):(s.options.splice(t+1,s.options.length),s.selected.length=t+1)})},upload:function(e,t){function i(e,t){let i=new Image,l=new FileReader;l.onload=function(){var a=l.result;i.src=a,i.onload=function(l){s(t,i,e)}},l.readAsDataURL(t)}function s(e,i,s){let n=document.createElement("canvas");n.width=t.data.save_width,n.height=t.data.save_height;let d=Math.max(n.width/i.naturalWidth,n.height/i.naturalHeight),c=n.getContext("2d");c.scale(d,d);var u=(c.canvas.width/d-i.naturalWidth)/2,p=(c.canvas.height/d-i.naturalHeight)/2;c.drawImage(i,u,p),n.toBlob(t=>{let i=new File([t],e.name,{type:e.type});o.append("wnd_file["+s+"]",i),r.form.attrs["data-oss-direct-upload"]?a(i):l(o)},e.type)}function l(){axios({url:wnd_action_api+"/common/wnd_upload_file",method:"post",data:o,headers:{},onUploadProgress:function(e){t.help.text=wnd.msg.waiting,t.help.class="is-primary"}}).then(e=>{if(e.data.status<=0)t.help.text=e.data.msg,t.help.class="is-danger";else{let i=e.data.data;for(let e=0,s=i.length;e<s;e++)i[e].status<=0?(t.help.text=i[e].msg,t.help.class="is-danger"):(t.help.text=wnd.msg.upload_successfully,t.help.class="is-success",t.thumbnail=i[e].thumbnail,t.file_id=i[e].id,t.file_name=wnd.msg.upload_successfully+'&nbsp<a href="'+i[e].url+'" target="_blank">'+wnd.msg.view+"</a>"),"image_upload"==t.type||"file_upload"==t.type||t.type}r.$nextTick(function(){funTransitionHeight(n,trs_time)})}).catch(e=>{console.log(e)})}async function a(e){let i=await wnd_upload_to_oss(e,t.data);i?(t.help.text=wnd.msg.upload_successfully,t.help.class="is-success",t.thumbnail=i.signed_url||i.url,t.file_id=i.id,t.file_name=wnd.msg.upload_successfully+'&nbsp<a href="'+(i.signed_url||i.url)+'" target="_blank">'+wnd.msg.view+"</a>",r.$nextTick(function(){funTransitionHeight(n,trs_time)})):(t.help.text=wnd.msg.upload_failed,t.help.class="is-danger")}let d=e.target.files,o=new FormData,r=this;if(t.data)for(const e in t.data)o.append(e,t.data[e]);for(let e=0,s=d.length;e<s;e++)d[e].type.includes("image/")&&(t.data.save_width||t.data.save_height)?i(e,d[e]):r.form.attrs["data-oss-direct-upload"]?a(d[e]):(o.set("wnd_file["+e+"]",d[e]),l(o))},delete_file:function(e,i){if(!e.file_id)return e.file_name="Error",!1;let s=new FormData;s.append("file_id",e.file_id),s.append("meta_key",e.data.meta_key),axios({url:wnd_action_api+"/common/wnd_delete_file",method:"post",data:s}).then(s=>{if(s.data.status<=0)return wnd_alert_notification(s.data.msg,"is-danger"),!1;e.thumbnail=t.fields[i].default_thumbnail,e.file_name=wnd.msg.deleted,e.file_id=0,"image_upload"==e.type||"file_upload"==e.type||e.type}).catch(e=>{console.log(e)})},suggest_tags:function(e,t){let i=this.form.fields[t],s={search:e,taxonomy:i.data.taxonomy};axios({method:"get",url:wnd_query_api+"/wnd_term_searcher",params:s}).then(e=>{i.data.suggestions=e.data.data})},enter_tag:function(e,t){let i=this.form.fields[t];if(!e.target.value||i.value.length>=i.data.max)return!1;i.value.push(e.target.value.trim()),e.target.value=""},enter_tag_by_sg:function(e,t){let i=this.form.fields[t];i.value.push(e.target.innerText.trim()),i.data.suggestions="";let s=e.target.closest(".tags-input").querySelector("[type=text]");s.value=""},delete_tag:function(e,t){let i=this.form.fields[t];i.value=i.value.filter(function(t){return t!==e})},handle_tag_input_click:function(e,t){let i=this.form.fields[t];i.value.length>=i.data.max&&(i.help.text="最多"+i.data.max+"个标签")},formdata_to_object:function(e){let t={};return e.forEach((e,i)=>{i.includes("[]")?(i=i.replace("[]",""),Reflect.has(t,i)?t[i].push(e):t[i]=[e]):t[i]=e}),t},submit:function(e){if(this.form.submit.attrs.class=t.submit.attrs.class+" is-loading",this.index.captcha){let t=this.form.fields[this.index.captcha];if(!t.value)return void wnd_submit_via_captcha(e)}let i=!0;for(const[e,s]of this.form.fields.entries()){if(!s.name||!s.required)continue;let l=!0,a=this.get_value(s),n=Object.values(s.options);n.includes(a)||("string"!=typeof a||a.length?Array.isArray(a)&&a.every(e=>!e)?l=!1:a||0===a||(l=!1):l=!1,l||(s.class=t.fields[e].class+" is-danger",s.help.class=t.fields[e].help.class+" is-danger",s.help.text=t.fields[e].help.text+" "+wnd.msg.required,i=!1))}if(!i)return this.form.submit.attrs.class=t.submit.attrs.class,this.$nextTick(function(){funTransitionHeight(n,trs_time)}),!1;let s=document.querySelector("#"+this.form.attrs.id),l=new FormData(s),a=Object.assign(this.default_data,this.formdata_to_object(l)),d={};"get"==this.form.attrs.method.toLowerCase()&&(d=a),axios({method:this.form.attrs.method,url:this.form.attrs.action,data:a,params:d}).then(e=>{info=wnd_handle_response(e.data,this.form.attrs.route,n),this.form.message.message=!1===info.msg?this.form.message.message:info.msg,this.form.message.attrs.class=t.message.attrs.class+" "+info.msg_class,this.form.submit.attrs.class=t.submit.attrs.class,this.index.captcha&&(this.form.fields[this.index.captcha].value=""),this.$nextTick(function(){funTransitionHeight(n,trs_time)})}).catch(function(e){console.log(e)})}},created(){for(let e=0,t=this.form.fields.length;e<t;e++){let t=this.form.fields[e];if("captcha"!=t.name||""!=t.value)if("editor"!=t.type)if("select_linked"!=t.type){if(t.name){let e=t.name.replace("[]","");this.default_data[e]=""}t.id&&(this.index.ids[t.id]=e)}else{let e=Object.keys(t.selected)[Object.keys(t.selected).length-1],i=parseInt(e)+1;t.selected[i]=""}else this.index.editor.push(e);else this.index.captcha=e}},mounted(){this.index.editor.length>0&&this.build_editor(),funTransitionHeight(n,trs_time),wnd_inner_html(`#${this.form.attrs.id} .form-script`,this.form.script)}};wnd_inner_html(n,'<div class="vue-app"></div>'),Vue.createApp(d).mount(e+" .vue-app")}document.addEventListener("click",function(e){let t=e.target.closest("button");if(!t)return;let i=t.closest("form");if(!i)return;let s=i.parentNode;if(t.classList.contains("add-row")){let e=t.closest(".field");t.classList.remove("add-row"),t.classList.add("remove-row"),t.innerText="-";let i=t.closest(".field").cloneNode(!0);t.classList.add("add-row"),t.classList.remove("remove-row"),t.innerText="+",e.after(i),funTransitionHeight(s,trs_time)}else t.classList.contains("remove-row")&&(t.closest(".field").outerHTML="",funTransitionHeight(s,trs_time))});