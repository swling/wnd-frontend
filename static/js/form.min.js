function _wnd_render_form(e,t,i="",s){let l=["text","number","email","password","url","color","date","range","tel"],a=JSON.parse(JSON.stringify(t)),n=document.querySelector(e);i&&n.classList.add(i);let d={template:function e(t){let i=e;function s(){return`\n<form v-bind="form.attrs">\n<div v-if="form.before_html" v-html="form.before_html"></div>\n<div class="field" v-show="form.title.title"><h3 v-bind="form.title.attrs" v-html="form.title.title"></h3></div>\n<div v-bind="form.message.attrs" class="notification is-light" v-show="form.message.message" v-html="form.message.message"></div>\n${function(e){let t="";for(let a=0;a<e.fields.length;a++){let n=e.fields[a],d=`form.fields[${a}]`;if(s()&&(t+=`\n<div class="field is-horizontal">\n<div class="field-label ${e.size}">\n<label v-if="${d}.label" class="label is-hidden-mobile"><span v-if="${d}.required" class="required">*</span>{{${d}.label}}</label>\n</div>\n<div class="field-body">`),"html"==n.type)t+=n.value;else if(l.includes(n.type))t+=i.build_text(d,a);else if("radio"==n.type||"checkbox"==n.type)t+=i.build_radio(d,a);else if("hidden"==n.type)t+='<input v-bind="parse_input_attr('+d+')" v-model="'+d+'.value" />';else{let e="build_"+n.type;t+=i[e](d,a)}function s(){return e.attrs["is-horizontal"]&&!["html","hidden"].includes(n.type)}s()&&(t+="</div></div>")}return t}(t)}\n${function(e){return`\n<div v-if="form.submit.text" class="field has-text-centered">\n<button type="button" v-bind="form.submit.attrs" @click="submit($event)" class="${e.size}" v-text="form.submit.text"></button>\n</div>`}(t)}\n<div class="form-script"></div>\n<div v-if="form.after_html" v-html="form.after_html"></div>\n</form>`}return build_label=(e,t)=>`<label v-if="!form.attrs['is-horizontal'] && ${e}.label" class="label" :class="form.size"><span v-if="${e}.required" class="required">*</span>{{${e}.label}}</label>`,i.build_text=(e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div v-if="${e}.addon_left" class="control" v-html="${e}.addon_left"></div>\n<div :class="get_control_class(${e})">\n<input v-bind="parse_input_attr(${e})" :value="html_decode(${e}.value)" @input="${e}.value=html_encode($event.target.value)" @change="change(${e}, $event)" @keypress.enter="submit"/>\n<span v-if="${e}.icon_left" class="icon is-left"  v-html="${e}.icon_left"></span>\n<span v-if="${e}.icon_right" class="icon is-right" v-html="${e}.icon_right"></span>\n</div>\n<div v-if="${e}.addon_right" class="control" v-html="${e}.addon_right"></div>\n<p v-if="!has_addon(${e})" v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`,i.build_radio=(e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div :class="get_control_class(${e})">\n<template v-for="(radio_value, radio_label) in ${e}.options">\n<label :class="${e}.type">\n<input v-bind="parse_input_attr(${e})" :value="radio_value" v-model="${e}.checked" @change="change(${e}, $event)" :disabled="should_be_disabled(${e}, radio_value)">\n{{radio_label}}</label>\n</template>\n</div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`,i.build_select=(e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<div v-if="${e}.addon_left" class="control" v-html="${e}.addon_left"></div>\n<div :class="get_control_class(${e})">\n<div class="select" :class="${e}.class + ' ' + form.size">\n<select v-bind="parse_input_attr(${e})" v-model="${e}.selected" @change="change(${e}, $event)">\n<option disabled value="">- {{${e}.label}} -</option>\n<option v-for="(value, name) in ${e}.options" :value="value">{{name}}</option>\n</select>\n</div>\n<span v-if="${e}.icon_left" class="icon is-left"  v-html="${e}.icon_left"></span>\n<span v-if="${e}.icon_right" class="icon is-right" v-html="${e}.icon_right"></span>\n</div>\n<div v-if="${e}.addon_right" class="control" v-html="${e}.addon_right"></div>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`,i.build_textarea=(e,t)=>`\n<div :class="get_field_class(${e})">\n${build_label(e)}\n<textarea :value="html_decode(${e}.value)" @input="${e}.value = html_encode($event.target.value)" v-bind="parse_input_attr(${e})" @change="change(${e}, $event)"></textarea>\n<p v-show="${e}.help.text" class="help" :class="${e}.help.class">{{${e}.help.text}}</p>\n</div>`,i.build_image_upload=(e,t)=>`\n<div :class="get_field_class(${e})">            \n<thumbnail-card \n:img-width="${e}.thumbnail_size.width" \n:img-height="${e}.thumbnail_size.height" \n:crop-width="${e}.data.save_width" \n:crop-height="${e}.data.save_height" \n:post_parent="${e}.data.post_parent" \n:meta_key="${e}.data.meta_key" \n:thumbnail="${e}.thumbnail">\n</thumbnail-card>\n</div>`,s()}(a),data:()=>({form:a,index:{captcha:"",ids:[]},default_data:{}}),components:{ThumbnailCard:ThumbnailCard},methods:{html_encode:function(e){let t=document.createElement("div");t.innerText=e;let i=t.innerHTML;return t=null,i},html_decode:function(e){var t=document.createElement("div");t.innerHTML=e;var i=t.innerText;return t=null,i},has_addon:function(e){return e.addon_left||e.addon_right},has_icon:function(e){return e.icon_left||e.icon_right},get_field_class:function(e){return this.has_addon(e)?"field has-addons":"field"},get_control_class:function(e){let t="control";return t+=this.has_addon(e)?" is-expanded":"",t+=e.icon_left?" has-icons-left":"",t+=e.icon_right?" has-icons-right":"",t},get_field_id:function(e,t){return e.id||this.form.attrs.id+"-"+t},get_value:function(e){let t=["checkbox","radio"].includes(e.type)?[]:"",i=e.checked||e.selected;return e.value?t=e.value:i&&("object"!=typeof i||i.length||Object.keys(i).length)&&(t=e.checked||e.selected),t="object"==typeof t?Object.values(t):t,t},parse_input_attr:function(e,t=[]){let i=JSON.parse(JSON.stringify(e));return Object.keys(i).forEach((e=>{i[e]&&""!=i[e]||delete i[e]})),t.forEach((e=>{delete i[e]})),i.class=(l.includes(e.type)?"input":e.type)+" "+(i.class||""),i.class+=" "+this.form.size,delete i.icon_left,delete i.icon_right,delete i.addon_left,delete i.addon_right,delete i.options,delete i.label,delete i.help,delete i.value,delete i.checked,delete i.selected,delete i.options,"file_upload"==i.type?i.type="file":"select"!=i.type&&"select_linked"!=i.type||delete i.type,delete i.data,delete i.linkage,i},click_target(e){document.querySelector(e).click()},should_be_disabled:function(e,t){if("checkbox"==e.type&&e.max>0){let i=e.checked;if(i.length>=e.max&&!i.includes(t))return!0}return!1},change:async function(e,t){e.class=e.class.replace("is-danger",""),e.help.class=e.help.class.replace("is-danger",""),e.help.text=e.help.text.replace(" "+wnd.msg.required,"")},formdata_to_object:function(e){let t={};return e.forEach(((e,i)=>{i.includes("[]")?(i=i.replace("[]",""),Reflect.has(t,i)?t[i].push(e):t[i]=[e]):t[i]=e})),t},submit:function(e){if(this.form.submit.attrs.class=t.submit.attrs.class+" is-loading",this.index.captcha){if(!this.form.fields[this.index.captcha].value)return void wnd_submit_via_captcha(e)}let i=!0;for(const[e,s]of this.form.fields.entries()){if(!s.name||!s.required)continue;let l=!0,a=this.get_value(s);Object.values(s.options).includes(a)||("string"!=typeof a||a.length?Array.isArray(a)&&a.every((e=>!e))?l=!1:a||0===a||(l=!1):l=!1,l||(s.class=t.fields[e].class+" is-danger",s.help.class=t.fields[e].help.class+" is-danger",s.help.text=t.fields[e].help.text+" "+wnd.msg.required,i=!1))}if(!i)return this.form.submit.attrs.class=t.submit.attrs.class,!1;let s=document.querySelector("#"+this.form.attrs.id),l=new FormData(s),a=JSON.parse(JSON.stringify(this.default_data)),d=Object.assign(a,this.formdata_to_object(l)),r={};"get"==this.form.attrs.method.toLowerCase()&&(r=d),axios({method:this.form.attrs.method,url:this.form.attrs.action,data:d,params:r}).then((e=>{info=wnd_handle_response(e.data,this.form.attrs.route,n),this.form.message.message=!1===info.msg?this.form.message.message:info.msg,this.form.message.attrs.class=t.message.attrs.class+" "+info.msg_class,this.form.submit.attrs.class=t.submit.attrs.class,this.index.captcha&&(this.form.fields[this.index.captcha].value="")})).catch((function(e){}))},reload:async function(e){let t=await axios({method:"get",url:s});this.form=t.data.data.structure}},created(){for(let e=0,t=this.form.fields.length;e<t;e++){let t=this.form.fields[e];if("captcha"!=t.name||""!=t.value){if(t.name){let e=t.name.replace("[]","");this.default_data[e]=""}t.id&&(this.index.ids[t.id]=e)}else this.index.captcha=e}},mounted(){wnd_inner_html(`#${this.form.attrs.id} .form-script`,this.form.script),funTransitionHeight(n,trs_time)},updated(){funTransitionHeight(n,trs_time)}};Vue.createApp(d).mount(e)}